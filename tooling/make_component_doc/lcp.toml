schemaVersion = "2.0"
id = "lcod://tooling/make_component_doc@0.1.0"
version = "0.1.0"
kind = "component"
summary = "Generate a component README and JSON Schemas from a single lcp.toml descriptor."

[deps]
requires = [
  "lcod://tooling/component/build_artifacts@0.1.0"
]

[inputs.descriptorPath]
summary = "Absolute or relative path to the component descriptor (lcp.toml)."
required = true
schema = """
{
  "type": "string",
  "minLength": 1
}"""

[inputs.write]
summary = "When true (default), write generated artefacts to disk."
required = false
schema = """
{
  "type": "boolean",
  "default": true
}"""

[inputs.readmePath]
summary = "Optional override for the README destination."
required = false
schema = """
{
  "type": "string"
}"""

[inputs.inputSchemaPath]
summary = "Optional override for the input schema destination."
required = false
schema = """
{
  "type": "string"
}"""

[inputs.outputSchemaPath]
summary = "Optional override for the output schema destination."
required = false
schema = """
{
  "type": "string"
}"""

[outputs.descriptor]
summary = "Parsed component descriptor."
schema = """
{
  "type": "object"
}"""

[outputs.readme]
summary = "Generated README content."
schema = """
{
  "type": "string"
}"""

[outputs.inputSchema]
summary = "Generated JSON Schema for inputs."
schema = """
{
  "type": "object"
}"""

[outputs.outputSchema]
summary = "Generated JSON Schema for outputs."
schema = """
{
  "type": "object"
}"""

[outputs.readmePath]
summary = "Resolved README output path."
schema = """
{
  "type": "string"
}"""

[outputs.inputSchemaPath]
summary = "Resolved input schema output path."
schema = """
{
  "type": "string"
}"""

[outputs.outputSchemaPath]
summary = "Resolved output schema output path."
schema = """
{
  "type": "string"
}"""

[outputs.readmeWriteResult]
summary = "Result from writing the README (empty when skipped)."
schema = """
{
  "type": "object"
}"""

[outputs.inputSchemaWriteResult]
summary = "Result from writing the input schema (empty when skipped)."
schema = """
{
  "type": "object"
}"""

[outputs.outputSchemaWriteResult]
summary = "Result from writing the output schema (empty when skipped)."
schema = """
{
  "type": "object"
}"""

[documentation]
body = """
Wrapper around `tooling/component/build_artifacts@0.1.0`. Accepts a single
component descriptor and returns the generated README plus JSON Schemas. When
`write` is left to its default (`true`), the artefacts are written next to the
descriptor so the command can be used locally or in CI via:

```
lcod-run lcod://tooling/make_component_doc@0.1.0 --input '{ "descriptorPath": ".../lcp.toml" }'
```
"""
