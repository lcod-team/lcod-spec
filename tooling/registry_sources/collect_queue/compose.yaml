compose:
  - call: lcod://tooling/value/default_array@0.1.0
    in:
      value: $.queue
    out:
      initialQueue: resolved

  - call: lcod://flow/while@1
    in:
      state:
        queue: $.initialQueue
        contributions: []
        warnings: []
        downloadsRoot: $.downloadsRoot
        sourcesBaseDir: $.sourcesBaseDir
        defaultEntrypoint: $.defaultEntrypoint
        basePriority: $.basePriority
        visited: {}
    children:
      condition:
        - call: lcod://tooling/array/length@0.1.0
          in:
            items: $.queue
          out:
            queueLength: length
        - call: lcod://impl/set@1
          in:
            continue: $.queueLength
          out:
            continue: continue
      body:
        - call: lcod://tooling/array/shift@0.1.0
          in:
            items: $.queue
          out:
            headPointer: head
            restQueue: rest

        - call: lcod://tooling/value/default_array@0.1.0
          in:
            value: $.contributions
          out:
            baseContributions: resolved

        - call: lcod://tooling/value/default_array@0.1.0
          in:
            value: $.warnings
          out:
            baseWarnings: resolved

        - call: lcod://tooling/value/default_array@0.1.0
          in:
            value: $.restQueue
          out:
            baseQueue: resolved

        - call: lcod://tooling/value/default_object@0.1.0
          in:
            value: $.visited
          out:
            currentVisited: resolved

        - call: lcod://tooling/value/is_string_nonempty@0.1.0
          in:
            value: $.headPointer.id
          out:
            pointerHasId: ok

        - call: lcod://core/string/format@0.1.0
          in:
            template: "id:{id}"
            values:
              id: $.headPointer.id
          out:
            pointerKeyFromId: value

        - call: lcod://tooling/json/stable_stringify@0.1.0
          in:
            value: $.headPointer
          out:
            pointerSerialized: text
            pointerSerializeWarning: warning

        - call: lcod://tooling/value/is_string_nonempty@0.1.0
          in:
            value: $.pointerSerialized
          out:
            hasPointerSerialized: ok

        - call: lcod://flow/if@1
          in:
            cond: $.hasPointerSerialized
          children:
            then:
              - call: lcod://tooling/hash/to_key@0.1.0
                in:
                  text: $.pointerSerialized
                  prefix: "json:"
                out:
                  hashedPointerKey: key
            else:
              - call: lcod://impl/set@1
                in:
                  hashedPointerKey: "json:missing"
                out:
                  hashedPointerKey: hashedPointerKey
          out:
            hashedPointerKey: hashedPointerKey

        - call: lcod://flow/if@1
          in:
            cond: $.pointerHasId
          children:
            then:
              - call: lcod://impl/set@1
                in:
                  pointerKey: $.pointerKeyFromId
                out:
                  pointerKey: pointerKey
            else:
              - call: lcod://impl/set@1
                in:
                  pointerKey: $.hashedPointerKey
                out:
                  pointerKey: pointerKey
          out:
            pointerKey: pointerKey

        - call: lcod://tooling/array/append@0.1.0
          in:
            items: []
            value: $.pointerKey
          out:
            pointerPath: items

        - call: lcod://tooling/object/has@0.1.0
          in:
            target: $.currentVisited
            path: $.pointerPath
          out:
            pointerAlreadyVisited: hasKey
            existingVisitedValue: value

        - call: lcod://tooling/value/is_string_nonempty@0.1.0
          in:
            value: $.pointerSerializeWarning
          out:
            hasSerializeWarning: ok

        - call: lcod://flow/if@1
          in:
            cond: $.hasSerializeWarning
          children:
            then:
              - call: lcod://tooling/array/append@0.1.0
                in:
                  items: $.baseWarnings
                  value: $.pointerSerializeWarning
                out:
                  warningAccumulator: items
            else:
              - call: lcod://impl/set@1
                in:
                  warningAccumulator: $.baseWarnings
                out:
                  warningAccumulator: warningAccumulator
          out:
            warningAccumulator: warningAccumulator

        - call: lcod://flow/if@1
          in:
            cond: $.pointerAlreadyVisited
          children:
            then:
              - call: lcod://impl/set@1
                in:
                  queue: $.baseQueue
                  contributions: $.baseContributions
                  warnings: $.warningAccumulator
                  visited: $.currentVisited
                out:
                  queue: queue
                  contributions: contributions
                  warnings: warnings
                  visited: visited
            else:
              - call: lcod://tooling/registry_sources/process_pointer@0.1.0
                in:
                  pointer: $.headPointer
                  downloadsRoot: $.downloadsRoot
                  defaultEntrypoint: $.defaultEntrypoint
                  basePriority: $.basePriority
                out:
                  processedEntry: entry
                  pointerChildren: children
                  processWarnings: warnings

              - call: lcod://tooling/value/default_array@0.1.0
                in:
                  value: $.pointerChildren
                out:
                  pointerChildren: resolved

              - call: lcod://flow/foreach@1
                in:
                  list: $.pointerChildren
                children:
                  body:
                    - call: lcod://tooling/value/is_string_nonempty@0.1.0
                      in:
                        value: $slot.item.baseDir
                      out:
                        childHasBaseDir: ok

                    - call: lcod://flow/if@1
                      in:
                        cond: $.childHasBaseDir
                      children:
                        then:
                          - call: lcod://impl/set@1
                            in:
                              pointerBaseDir: $slot.item.baseDir
                            out:
                              pointerBaseDir: pointerBaseDir
                        else:
                          - call: lcod://impl/set@1
                            in:
                              pointerBaseDir: $.headPointer.baseDir
                            out:
                              pointerBaseDir: pointerBaseDir
                      out:
                        pointerBaseDir: pointerBaseDir

                    - call: lcod://tooling/registry_sources/normalize_pointer@0.1.0
                      in:
                        entry: $slot.item
                        inherited: $.headPointer
                        baseDir: $.pointerBaseDir
                        sourcesBaseDir: $.sourcesBaseDir
                        defaultEntrypoint: $.defaultEntrypoint
                        basePriority: $.basePriority
                        catalogueBaseDir: $.pointerBaseDir
                      out:
                        childPointer: pointer
                        normalizeWarnings: warnings

                    - call: lcod://impl/set@1
                      in:
                        normalized:
                          pointer: $.childPointer
                          warnings: $.normalizeWarnings
                      out:
                        normalized: normalized
                collectPath: $.normalized
                out:
                  normalizedChildren: results

              - call: lcod://tooling/registry_sources/partition_normalized@0.1.0
                in:
                  entries: $.normalizedChildren
                out:
                  normalizedPointers: pointers
                  normalizationWarnings: warnings

              - call: lcod://tooling/registry_sources/build_inline_entry@0.1.0
                in:
                  pointer: $.headPointer
                  entry: $.processedEntry
                out:
                  contribution: contribution

              - call: lcod://tooling/value/is_object@0.1.0
                in:
                  value: $.contribution
                out:
                  hasContribution: ok

              - call: lcod://flow/if@1
                in:
                  cond: $.hasContribution
                children:
                  then:
                    - call: lcod://tooling/array/append@0.1.0
                      in:
                        items: []
                        value: $.contribution
                      out:
                        contributionBatch: items
                out:
                  contributionBatch: contributionBatch

              - call: lcod://tooling/value/default_array@0.1.0
                in:
                  value: $.contributionBatch
                out:
                  contributionBatch: resolved

              - call: lcod://tooling/value/default_array@0.1.0
                in:
                  value: $.normalizedPointers
                out:
                  normalizedPointers: resolved

              - call: lcod://tooling/value/default_array@0.1.0
                in:
                  value: $.processWarnings
                out:
                  normalizedProcessWarnings: resolved

              - call: lcod://tooling/value/default_array@0.1.0
                in:
                  value: $.normalizationWarnings
                out:
                  normalizedNormalizationWarnings: resolved

              - call: lcod://tooling/array/append@0.1.0
                in:
                  items: $.normalizedProcessWarnings
                  values: $.normalizedNormalizationWarnings
                out:
                  pointerWarnings: items

              - call: lcod://tooling/array/append@0.1.0
                in:
                  items: $.warningAccumulator
                  values: $.pointerWarnings
                out:
                  updatedWarnings: items

              - call: lcod://tooling/array/append@0.1.0
                in:
                  items: $.baseContributions
                  values: $.contributionBatch
                out:
                  updatedContributions: items

              - call: lcod://tooling/array/append@0.1.0
                in:
                  items: $.baseQueue
                  values: $.normalizedPointers
                out:
                  updatedQueue: items

              - call: lcod://tooling/object/set@0.1.0
                in:
                  target: $.currentVisited
                  path: $.pointerPath
                  value: true
                out:
                  updatedVisited: object
                  previousVisited: previous

              - call: lcod://impl/set@1
                in:
                  queue: $.updatedQueue
                  contributions: $.updatedContributions
                  warnings: $.updatedWarnings
                  visited: $.updatedVisited
                out:
                  queue: queue
                  contributions: contributions
                  warnings: warnings
                  visited: visited
          out:
            queue: queue
            contributions: contributions
            warnings: warnings
            visited: visited
    out:
      loopState: state

  - call: lcod://tooling/value/default_array@0.1.0
    in:
      value: $.loopState.contributions
    out:
      contributions: resolved

  - call: lcod://tooling/value/default_array@0.1.0
    in:
      value: $.loopState.warnings
    out:
      warnings: resolved
