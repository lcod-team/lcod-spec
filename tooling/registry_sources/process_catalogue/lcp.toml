schemaVersion = "2.0"
id = "lcod://tooling/registry_sources/process_catalogue@0.1.0"
version = "0.1.0"
kind = "component"
summary = "Analyse a resolved catalogue payload and emit inline component entries."

[palette]
category = "Registry"
icon = "mdi:table-search"
tags = [ "registry", "catalogue" ]

[deps]
requires = [
  "lcod://tooling/script@1",
  "lcod://tooling/path/join_chain@0.1.0",
  "lcod://tooling/path/is_absolute@0.1.0",
  "lcod://tooling/path/to_file_url@0.1.0"
]

[inputs.catalogue]
summary = "Parsed catalogue JSON."
required = true
schema = """
{
  "type": "object"
}"""

[inputs.pointer]
summary = "Normalized pointer currently processed."
required = true
schema = """
{
  "type": "object"
}"""

[inputs.basePriority]
summary = "Default priority inherited from sources defaults."
required = false
schema = """
{
  "type": "integer"
}"""

[inputs.baseDir]
summary = "Base directory of the current payload (used for file origins)."
required = true
schema = """
{
  "type": "string"
}"""

[outputs.entry]
summary = "Inline registry entry (id, priority, defaults, metadata, lines)."
schema = """
{
  "type": "object"
}"""

[outputs.warnings]
summary = "Warnings emitted while processing the catalogue."
schema = """
{
  "type": "array"
}"""

[documentation]
body = "Transform a parsed registry catalogue into inline component entries. The component infers defaults from the catalogue origin, applies priority rules, and returns the lines to inject into the accumulator used by the resolver."
