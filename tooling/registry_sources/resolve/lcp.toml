schemaVersion = "2.0"
id = "lcod://tooling/registry_sources/resolve@0.1.0"
version = "0.1.0"
kind = "component"
summary = "Load registry catalogues defined in sources.json and produce inline registry sources."

[palette]
category = "Registry"
icon = "mdi:source-branch"
tags = [ "registry", "catalogue" ]

[deps]
requires = [
  "lcod://tooling/registry_sources/prepare_env@0.1.0",
  "lcod://tooling/registry_sources/load_config@0.1.0",
  "lcod://tooling/registry_sources/collect_entries@0.1.0",
  "lcod://tooling/array/append@0.1.0",
  "lcod://flow/if@1",
  "lcod://impl/set@1"
]

[inputs.projectPath]
summary = "Project root used to resolve relative pointers."
required = false
schema = """
{
  "type": "string"
}"""

[inputs.cacheDir]
summary = "Cache directory root (defaults to project/.lcod/cache)."
required = false
schema = """
{
  "type": "string"
}"""

[inputs.sourcesPath]
summary = "Explicit path to sources.json."
required = false
schema = """
{
  "type": "string"
}"""

[inputs.sourcesText]
summary = "When provided, skip reading from disk and reuse the given JSON payload."
required = false
schema = """
{
  "type": "string"
}"""

[inputs.defaultSourcesSpec]
summary = "Default sources specification used when the file is missing."
required = false
schema = """
{
  "type": "object"
}"""

[inputs.cwd]
summary = "Working directory fallback when projectPath is not provided."
required = false
schema = """
{
  "type": "string"
}"""

[outputs.registrySources]
summary = "Inline registry source entries consumed by the resolver."
schema = """
{
  "type": "array"
}"""

[outputs.warnings]
summary = "Warning messages collected during resolution."
schema = """
{
  "type": "array"
}"""

[outputs.sourcesPath]
summary = "Final location or label of the sources specification."
schema = """
{
  "type": "string"
}"""

[outputs.projectRoot]
summary = "Resolved project root."
schema = """
{
  "type": "string"
}"""

[outputs.cacheDir]
summary = "Resolved cache directory root."
schema = """
{
  "type": "string"
}"""

[outputs.downloadsRoot]
summary = "Directory used to store downloaded catalogues."
schema = """
{
  "type": "string"
}"""

[outputs.sourcesConfig]
summary = "Parsed sources specification."
schema = """
{
  "type": "object"
}"""

[documentation]
body = """
Resolve registry catalogue pointers defined in a `sources.json` specification.
This component orchestrates dedicated helpers to read remote/local catalogues,
validate schemas, and return the inline registry source entries consumed by the
resolver pipeline."""
