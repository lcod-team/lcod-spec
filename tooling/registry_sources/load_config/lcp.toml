schemaVersion = "1.0"
id = "lcod://tooling/registry_sources/load_config@0.1.0"
name = "load_config"
namespace = "tooling/registry_sources"
version = "0.1.0"
kind = "component"

summary = "Load and parse the registry sources specification, applying default fallbacks when the file is missing."

[palette]
category = "Registry"
icon = "mdi:file-search"
tags = ["registry", "sources", "config"]

[docs]
readme = "README.md"

[[io.input]]
name = "projectRoot"
type = "string"
required = true
description = "Resolved project root directory."

[[io.input]]
name = "sourcesPath"
type = "string"
required = false
description = "Optional explicit path to sources.json (absolute or relative to project)."

[[io.input]]
name = "sourcesText"
type = "string"
required = false
description = "Raw JSON text when the caller already loaded the sources file."

[[io.input]]
name = "defaultSourcesSpec"
type = "object"
required = false
description = "Built-in sources specification used when the file is missing."

[[io.output]]
name = "sourcesConfig"
type = "object"
description = "Parsed sources configuration (null when invalid)."

[[io.output]]
name = "sourcesPath"
type = "string"
description = "Effective path label for the sources configuration (file path or builtin label)."

[[io.output]]
name = "sourcesBaseDir"
type = "string"
description = "Directory used to resolve relative catalogue pointers."

[[io.output]]
name = "warnings"
type = "array"
description = "Warnings emitted while loading/reading the configuration."

[[io.output]]
name = "valid"
type = "boolean"
description = "Indicates whether the configuration was parsed successfully."

[deps]
requires = [
  "lcod://tooling/script@1",
  "lcod://axiom/path/join@1",
  "lcod://contract/core/fs/read-file@1"
]
