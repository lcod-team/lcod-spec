schemaVersion = "2.0"
id = "lcod://core/string/format@0.1.0"
version = "0.1.0"
kind = "component"
summary = "Expose core/string/format@1 as an LCOD component."

[palette]
category = "String"
icon = "mdi:code-braces"
tags = [ "string", "format", "core" ]

[deps]
requires = [ "lcod://contract/core/string/format@1" ]

[inputs.template]
summary = "Template containing placeholders."
required = true
schema = """
{
  "type": "string"
}"""

[inputs.values]
summary = "Dictionary of values injected into the template."
required = false
schema = """
{
  "type": "object"
}"""

[inputs.fallback]
summary = "Default replacement when a placeholder cannot be resolved."
required = false
schema = """
{
  "type": "string"
}"""

[inputs.missingPolicy]
summary = "How to handle missing placeholders (`ignore` or `error`)."
required = false
schema = """
{
  "type": "string"
}"""

[outputs.value]
summary = "Rendered string."
schema = """
{
  "type": "string"
}"""

[outputs.missing]
summary = "Placeholders that were not resolved (when `missingPolicy` is `ignore`)."
schema = """
{
  "type": "array"
}"""

[outputs.error]
summary = 'Optional structured error when `missingPolicy = "error"`.'
schema = """
{
  "type": "object"
}"""

[documentation]
body = """
Wrapper around the `core/string/format@1` contract that renders template strings
using named placeholders."""
