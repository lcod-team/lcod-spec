schemaVersion = "2.0"
id = "lcod://core/object/merge@0.1.0"
version = "0.1.0"
kind = "component"
summary = "Expose core/object/merge@1 (shallow or deep merge) as a component."

[palette]
category = "Object"
icon = "mdi:merge"
tags = [ "object", "merge", "core" ]

[deps]
requires = [ "lcod://contract/core/object/merge@1" ]

[inputs.left]
summary = "Base object."
required = true
schema = """
{
  "type": "object"
}"""

[inputs.right]
summary = "Object whose properties overwrite the base object."
required = true
schema = """
{
  "type": "object"
}"""

[inputs.deep]
summary = "Enable deep merge of nested objects."
required = false
schema = """
{
  "type": "boolean"
}"""

[inputs.arrayStrategy]
summary = "When deep merge is enabled, choose `replace` (default) or `concat` for arrays."
required = false
schema = """
{
  "type": "string"
}"""

[outputs.value]
summary = "Merged object."
schema = """
{
  "type": "object"
}"""

[outputs.conflicts]
summary = "Keys overwritten during the merge (top-level only)."
schema = """
{
  "type": "array"
}"""

[documentation]
body = """
Wrapper over the `core/object/merge@1` contract that merges two objects while
keeping the inputs immutable."""
