compose:
  - call: lcod://tooling/test_checker@1
    in:
      compose:
        - call: lcod://tooling/script@1
          in:
            source: |
              () => ({
                left: { a: 1, nested: { flag: true }, arr: [1, 2] },
                right: { b: 2, nested: { flag: false, extra: 'x' }, arr: [3], label: 'y' },
                baseArray: ["alpha", "beta"],
                item: "gamma",
                template: 'Hello {user.name}, you have {stats.count} messages',
                values: { user: { name: 'Ada' }, stats: { count: 3 } }
              })
          out:
            left: left
            right: right
            baseArray: baseArray
            item: item
            template: template
            values: values

        - call: lcod://contract/core/object/merge@1
          in:
            left: $.left
            right: $.right
          out:
            mergedShallow: $

        - call: lcod://contract/core/object/merge@1
          in:
            left: $.left
            right: $.right
            deep: true
            arrayStrategy: concat
          out:
            mergedDeep: $

        - call: lcod://contract/core/array/append@1
          in:
            array: $.baseArray
            item: $.item
          out:
            appended: $

        - call: lcod://contract/core/string/format@1
          in:
            template: $.template
            values: $.values
          out:
            formatted: $

        - call: lcod://contract/core/json/encode@1
          in:
            value:
              greeting: $.formatted.value
              merged: $.mergedDeep.value
            sortKeys: true
          out:
            encoded: $

        - call: lcod://contract/core/json/decode@1
          in:
            text: $.encoded.text
          out:
            decoded: $

      expected:
        left:
          a: 1
          nested:
            flag: true
          arr:
            - 1
            - 2
        right:
          b: 2
          nested:
            flag: false
            extra: x
          arr:
            - 3
          label: y
        baseArray:
          - alpha
          - beta
        item: gamma
        template: "Hello {user.name}, you have {stats.count} messages"
        values:
          user:
            name: Ada
          stats:
            count: 3
        mergedShallow:
          value:
            a: 1
            nested:
              flag: false
              extra: x
            arr:
              - 3
            b: 2
            label: y
          conflicts:
            - arr
            - b
            - label
            - nested
        mergedDeep:
          value:
            a: 1
            nested:
              flag: false
              extra: x
            arr:
              - 1
              - 2
              - 3
            b: 2
            label: y
          conflicts:
            - arr
            - b
            - label
            - nested
        appended:
          value:
            - alpha
            - beta
            - gamma
          length: 3
        formatted:
          value: "Hello Ada, you have 3 messages"
        encoded:
          text: "{\"greeting\":\"Hello Ada, you have 3 messages\",\"merged\":{\"a\":1,\"arr\":[1,2,3],\"b\":2,\"label\":\"y\",\"nested\":{\"extra\":\"x\",\"flag\":false}}}"
          bytes: 130
        decoded:
          value:
            greeting: "Hello Ada, you have 3 messages"
            merged:
              a: 1
              arr:
                - 1
                - 2
                - 3
              b: 2
              label: y
              nested:
                extra: x
                flag: false
          bytes: 130
    out:
      report: $
