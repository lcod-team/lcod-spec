compose:
  - call: lcod://tooling/test_checker@1
    in:
      compose:
        - call: lcod://tooling/component/build_artifacts@0.1.0
          in:
            descriptorPath: "contracts/core/fs/write_file/lcp.toml"
            write: false
          out:
            build: $
        - call: lcod://impl/set@1
          in:
            build: null
          out:
            build: build
        - call: lcod://tooling/script@1
          in:
            input: "__lcod_state__"
            bindings:
              build:
                path: $.build
            source: |
              async ({ input }) => {
                const result = input.build || {};
                const params = result.params && typeof result.params === 'object' ? result.params : {};
                const descriptorLoaded = typeof result.descriptorText === 'string';
                const descriptorPath = params.descriptorPath || result.descriptorPath || null;
                const write = result.write === false;
                const skippedWrites =
                  Object.keys(result.readmeWriteResult || {}).length === 0
                  && Object.keys(result.inputSchemaWriteResult || {}).length === 0
                  && Object.keys(result.outputSchemaWriteResult || {}).length === 0;
                return {
                  success: true,
                  details: {
                    descriptorLoaded,
                    descriptorPath,
                    write,
                    skippedWrites
                  }
                };
              }
          out:
            verification: $
      expected:
        build: null
        verification:
          success: true
    out:
      report: $
